
/*EXEMPLO DE COMO CRIAR UM BANCO COM TODOS DETALHES*/
CREATE DATABASE BD_BIBLIOTECA /* CRIA O BANCO CREATE DATABASE +NOME DO BANCO*/
ON PRIMARY( /**/
NAME = BD_BIBLIOTECA,/*NOME DO BANCO*/
FILENAME ='C:\SQL/DB_BIBLIOTECA',/*LOCAL ONDE O BANCO SERA SALVO*/
SIZE = 6MB, --TAMANHO DO BANCO
MAXSIZE = 15MB,--TAMANHO MAXIMO PARA O BANCO
FILEGROWTH = 10% -- O BANCO AUMENTA DE TAMANHO DE 10% EM 10%
)
/*OS COMANDOS A CIMA NÃO SÃO OBRIGATORIOS E PODE SE CRIAR O BANCO SO COM OS COMANDOS DO EXEMPLO A BAIXO*/

--EXEMPLO DE COMO CRIAR UM BANCO DE DADOS SIMPLES

CREATE DATABASE DB_BIBLIOTECA /*CRIANDO BANCO.. CREATE DATABASE E O NOME DO BANCO*/
USE DB_BIBLIOTECA /*COMANDO USE SELECIONA O BANCO QUE RECEBERA OS COMANDOSOU, USE + NOME DO BANCO*/
SP_HELPDB DB_BIBLIOTECA /*TRAS INFORMAÇÕES SOBRE O BANCO/ SP_HELPDB+NOME DO BANCO*/

--RESTRIÇÕES NO SQL SERVER
NOT NULL --INDICA QUE UM CAMPO NÃO PODE FICAR VAZIO
UNIQUE -- FAZ QUE UM REGISTRO NÃO POSSA SER REPETIDO
PRIMARY KEY --USA SE PARA DECLARAR UMA CHAVA PRIMARIA NA TABELA
FOREIGN KEY -- USADA PARA DEFINIR UMA CHAVE ESTRAGEIRA
CHECK /*SEFINE QUE A COLUNA OU TABELA SO RECEBERA UM TIPO DE VALOR 
SE VC DEFINIR QUE AQUELA COLUNA SO PODERA RECEBER LETRAS ELA NÃO PERMITIRA VALORES NUMERICO */
DEFAULT -- DEFINE UM VALOR PADRÃO A SER USADO,SE TODOS SEUS CLIENTE SAO DE SP VC PODE DEFINIR SP COMMO VALOR PADRAO PARA TODOS USUARIOS
IDENTITY--FAZ O PREENCIMENTO AUTOMATICO DO CAMPO ESCOLHIDO,SO PODE TER UM POR TABELA


--CRIANDO TABELAS 
--NOME DO CAMPO -TIPO DE DADO- TAMANHO(SE FOR VARCHAR) NULL CASO O CAMPO POSSA SER DEIXADO VAZIO OU NOT NULL SE O PREENCHIMENTO DO CAMPO FOR OBRIGATORIO
--TABELA LIVRO
CREATE TABLE TABELA_LIVRO
(ID_LIVRO SMALLINT PRIMARY KEY IDENTITY(100,1),
NOME_LIVRO VARCHAR(50) NOT NULL,                
ISBN VARCHAR (30) NOT NULL UNIQUE,              
ID_AUTOR SMALLINT NOT NULL,
DATA_PUBLICACAO DATETIME NOT NULL,
PRECO_LIVRO MONEY NOT NULL)
--OBS:--IDENTITY PREENCHE OS VALORES POR VC,
--COMEÇA A CONTAR DO 100 E DEPOIS ACRECENTA DE 1 EM 1

--TABELA AUTORES
CREATE TABLE TABELA_AUTORES(
ID_AUTOR  SMALLINT PRIMARY KEY IDENTITY,
NOME_AUTOR VARCHAR (50), 
SOBRENOME_AUTOR VARCHAR(60)
)

--TABELA EDITORAS
CREATE TABLE TABELA_EDITORA
(ID_EDITORA SMALLINT PRIMARY KEY IDENTITY,
NOME_EDITORA VARCHAR (50) NOT NULL
)

--CHECANDO SE A TABELA FOI CRIADA CORRETAMENTE

SP_HELP TABELA_AUTORES -- SP_HELP + NOME DA TABELA OU BANCO

--APOS AS TABELAS CRIADAS VC PODE CRIAR O MER AUTOMATICAMENTE (DIAGRAMA) DAS TABELAS COM OS SEGUINTES PASSOS:
/*
1-CLICAR NO SEU BANCO
2-CLICAR NA PASTA DIAGRAMA DE BANCO DE DADOS (BOTAO DIREITODO MOUSE)
3-CLICAR EM NOVO DIAGRAMA DE BANCO DE DADOS
4-CLICAR EM ATUALIZAR
5-SELECIONA CADA TABELA NA TELA
6-CLIQUE EM ADICIONAR EM CADA TABELA PARA ADICIONAR A TABELA
7-O PROPRIO SISTEMA CRIARA A MODELAGEM DE SEU BANCO PARA VC
*/

--identity exemplo
--tabela criada para exemplo
CREATE TABLE TABELA_TESTE_IDENTITY(
ID_TESTE SMALLINT PRIMARY KEY IDENTITY,
VALOR SMALLINT NOT NULL)

--INSERINDO DADOS NA TABELA TESTE COM COMANDO INSERT
--INSERT+NOME DA TABELA+(CAMPO DESEJADO)VALUES(VALOR DESEJADO)
INSERT INTO TABELA_TESTE_IDENTITY(VALOR)VALUES(10)
INSERT INTO TABELA_TESTE_IDENTITY(VALOR)VALUES(20)
INSERT INTO TABELA_TESTE_IDENTITY(VALOR)VALUES(30)
INSERT INTO TABELA_TESTE_IDENTITY(VALOR)VALUES(40)

--EXIBINDO OS DADOS INSERIDOS COM SELECT
--COMANDO SELECT 
--O ASTERISCO SIGNIFICA SELECIONAR TUDO NA TABELA
-- FROM +NOME DA TABELA DEFINE A TABELA QUE SE QUER SELECIONAR OS DADOS

SELECT *FROM TABELA_TESTE_IDENTITY

--ALTER TABLE E DROP
--ALTER TABLE+ NOME DA TABELA PARA ALTERAR
-- PODE SE TBM ALTERAR UMA CONSTRAINT:
--ALTER TABLE NOME DA TABELA
--DROP CONSTRAINT NOMEDACONSTRAINT

--EXEMPLO APAGANDO COLUNA
USE DB_BIBLIOTECA
ALTER TABLE TABELA_LIVRO
DROP COLUMN ID_AUTOR

--AADICIONANDO COLUNA COM ALTER TABLE
ALTER TABLE TABELA_LIVRO
ADD ID_AUTOR SMALLINT NOT NULL
CONSTRAINT FK_ID_AUTOR FOREIGN KEY(ID_AUTOR)
REFERENCES TABELA_AUTORES

ALTER TABLE TABELA_LIVRO
ADD ID_EDITORA SMALLINT NOT NULL
CONSTRAINT FK_ID_EDITORA FOREIGN KEY(ID_EDITORA)
REFERENCES TABELA_EDITORA

ALTER TABLE TABELA_LIVRO
ALTER COLUMN ID_AUTOR SMALLINT NOT NULL

SELECT * FROM TABELA_LIVRO

--EXEMPLO DELETANDO TABELA DE TESTE
USE DB_BIBLIOTECA
DROP TABLE TABELA_TESTE_IDENTITY

--EXEMPLO INSERINDO DADOS NA TABELA
--INSERT INTO(COLUNAS QUE RECEBERÃO OS DADOS)VALUES(VALORES QUE VC DESEJA COLOCAR)

--INSERINDO DADOS NA TABELA AUTORES
INSERT INTO TABELA_AUTORES(ID_AUTOR,NOME_AUTOR,SOBRENOME_AUTOR)VALUES(1,'DANIEL','BARRET')
INSERT INTO TABELA_AUTORES(ID_AUTOR,NOME_AUTOR,SOBRENOME_AUTOR)VALUES(2,'GERALD','CARTER')
INSERT INTO TABELA_AUTORES(ID_AUTOR,NOME_AUTOR,SOBRENOME_AUTOR)VALUES(3,'MARK','SOBELL')
INSERT INTO TABELA_AUTORES(ID_AUTOR,NOME_AUTOR,SOBRENOME_AUTOR)VALUES(4,'WILLIAM','STANEK')
INSERT INTO TABELA_AUTORES(ID_AUTOR,NOME_AUTOR,SOBRENOME_AUTOR)VALUES(5,'RICHARD','BLUM')

--INSERINDO DADOS NA tabela editoras
INSERT INTO TABELA_EDITORA(NOME_EDITORA)VALUES('PRENTICE HALL')
INSERT INTO TABELA_EDITORA(NOME_EDITORA)VALUES('O REILLY')
INSERT INTO TABELA_EDITORA(NOME_EDITORA)VALUES('MICROSOFT PRESS')
INSERT INTO TABELA_EDITORA(NOME_EDITORA)VALUES('WILEY')

--INSERINDO DADOS NA TABELA LIVRO
INSERT INTO TABELA_LIVRO(NOME_LIVRO,ISBN,DATA_PUBLICACAO,PRECO_LIVRO,ID_AUTOR,ID_EDITORA )
VALUES('LINUX',555,2005-23-12,12,1,1)

INSERT INTO TABELA_LIVRO(NOME_LIVRO,ISBN,DATA_PUBLICACAO,PRECO_LIVRO,ID_AUTOR,ID_EDITORA )
VALUES('WINDOWS',556,2010-23-12,12,1,1)

INSERT INTO TABELA_LIVRO(NOME_LIVRO,ISBN,DATA_PUBLICACAO,PRECO_LIVRO,ID_AUTOR,ID_EDITORA )
VALUES('MAC',557,2023-23-12,12,1,1)

--COMANDO TRUNCA E  LIMPA OS DADOS DE UMA TABELA
--TRUNCATE TABLE + NOME DA TABELA
--TRUNCATE TABLE TABELA_AUTORES

--COMANDO SELECT SIMPLES MOSTRANDO DADOS DE UMA TABELA

-- * SELECIONA TUDO DA TABELA
SELECT * FROM TABELA_AUTORES
SELECT * FROM TABELA_EDITORA
SELECT * FROM TABELA_LIVRO

-- SELECIONANDO SO UM CAMPO DA TABELA
SELECT NOME_AUTOR FROM TABELA_AUTORES
SELECT NOME_EDITORA FROM TABELA_EDITORA
SELECT NOME_LIVRO FROM TABELA_LIVRO
-- SELECIONANDO 2 OU MAIS CAMPOS DE UMA TABELA
SELECT NOME_AUTOR,SOBRENOME_AUTOR FROM TABELA_AUTORES --2 CAMPOS
SELECT NOME_EDITORA,ID_EDITORA FROM TABELA_EDITORA -- 2 COMPOS
SELECT NOME_LIVRO,ISBN,DATA_PUBLICACAO FROM TABELA_LIVRO-- 3 OU MAIS CAMPOS

--ORDER BY (SELECIONANDO EM ORDE CRESCENTE OU DECRESCENTE)
SELECT * FROM TABELA_LIVRO ORDER BY NOME_LIVRO ASC --ORDEM CRESCENTE
SELECT * FROM TABELA_LIVRO ORDER BY NOME_LIVRO DESC -- ORDEM DECRESENCE

--DISTINCT EXIBINDO VALORES SEM REPETIÇÃO
SELECT DISTINCT ID_AUTOR FROM TABELA_AUTORES

--SELECT COM WHERE (ONDE)
--SELECIONE O ID_AUTOR DA TABELA_AUTORES ONDE SOBRENOME_AUTOR É IGUAL A 'STANEC'
SELECT ID_AUTOR FROM TABELA_AUTORES WHERE SOBRENOME_AUTOR = 'STANEC'

--SELECT COM AND 
--CODIGO
SELECT* FROM TABELA_LIVRO WHERE ID_LIVRO >2 AND ID_AUTOR <3
--EXPLICAÇÃO
--SELECIONE TUDO DA TABELA_LIVRO ONDE ID_LIVRO É MAIOR QUE 2 E O ID_AUTOR É MENOR QUE 3

--SELECT COM OR
--CODIGO
SELECT* FROM TABELA_LIVRO WHERE ID_LIVRO >2 OR ID_AUTOR <3
--SELECIONE TUDO DA TABELA_LIVRO ONDE ID_LIVRO É MAIOR QUE 2 OU O ID_AUTOR É MENOR QUE 3

--FAZENDO UP DATE NAS TABELAS
-- UPDATE NOME DA TABELA SET COLUNA(UMA OU MAIS) = VALOR OPCIONAL USAR WHERE->[ WHERE FILTRO]
--CODIGO
UPDATE TABELA_LIVRO SET PRECO_LIVRO= 70.00 
WHERE ID_LIVRO = 102
--EXPLICAÇÃO
-- ATUALIZE TABELA LIVROS COLOCANDO PRECO_LIVRO = 70.00
-- ONDE O ID_LIVRO FOR IGUAL A 102
 --EXEMPLO 2
 UPDATE TABELA_AUTORES SET SOBRENOME_AUTOR = 'CARTMAN' 
 WHERE ID_AUTOR = 2
 --EXLICAÇÃO
 --ATUALIZE TABELA_AUTORES COLOCANDO SOBRENOME_AUTOR = 'CARTMAN'
 --ONDE ID-LIVRO FOR IGUAL A 102 102

 --SELECT COM COMANDO TOP 9USADO PARA ESPECIFICAR UM NUMERO DE REGISTROS A RETORNAR
 --CODIGO
 SELECT TOP 10 PERCENT NOME_LIVRO FROM TABELA_LIVRO
 --EXPLICAÇÃO
-- SELECIONE OS PRIMEIROS 10% DE REGISTROS DA TABELA-LIVRO
--EXEMPLO 2
SELECT TOP 2 NOME_LIVRO FROM TABELA_LIVRO
--EXPLICAÇÃO
-- SELECIONE OS 2 PRIMEIROS  DE REGISTROS DA TABELA-LIVRO

--COMANDO ALIAS
--DA UM NOME DIFERENTE A UMA COLUNA OU TABELA EM UMA CONSULTA
--CODIGO
SELECT NOME_LIVRO AS  LIVRO FROM TABELA_LIVRO
--EXPLICAÇÃO
--SELECIONE NOME_LIVRO COMO LIVRO DA TABELA LIVRO

--COMANDO UNION
-- FAZ A UNIÃO DE DOIS SELECT DE DUAS TABELAS
--CODIGO
USE DB_BIBLIOTECA
SELECT NOME_AUTOR FROM TABELA_AUTORES
UNION
SELECT NOME_LIVRO FROM TABELA_LIVRO
--EXPLICAÇÃO
/*MOSTRA OS NOMES DE AUTORES DA TABELA AUTORES E OS NOMES DOS LIVROS 
DA TABELA LIVROS*/

--COMANDO SELECT INTO
/*SELECIONA DADOS DE UMA OU MAIS TABELAS 
USADO PARA CRIAR BACKUPS DE TABELAS TAMBEM*/
 --CODIGO
 SELECT NOME_LIVRO,ISBN INTO LIVRO_ISBN FROM TABELA_LIVRO WHERE ID_LIVRO > 2
 /*SELECIONE NOME_LIVRO E ISBN COLOCANDO NA TABELA LIVRO_SBN DA TABELA_LIVRO
 ONDE O ID_LIVRO FOR MAIOR QUE 2*/
 USE DB_BIBLIOTECA
 --EXEMPLO BACKUP DE UMA TABELA COM COMANDO INTO
 SELECT* INTO TABELA_LIVRO_BACKUP FROM TABELA_LIVRO
 --EXPLICAÇÃO
 /*SELECIONE TUDO  COLOQUE NA TABELA_LIVRO_BACKUP DA TABELA_LIVRO*/

 --FUNÇÕES MATEMATICAS NO SQL SERVER
 --PODE SE COLOCAR * OU O NOME DAS COLUNAS UMA OU MAIS

 --COUNT -- CONTA UM NUMERO DE REGISTROS DE UM A TABELA
 SELECT COUNT(*)FROM TABELA_AUTORES
 --MAX -- MOSTRA O VALOR MAXIMO EM UMA TABELA
 SELECT MAX(PRECO_LIVRO)FROM TABELA_LIVRO
 --MIN --MOSTRA O VALOR MINIMO EM UMA TABELA
 SELECT MIN(PRECO_LIVRO)FROM TABELA_LIVRO
 --AVG --MOSTRA O VALOR MEDIO EM UMA TABELA
 SELECT AVG(PRECO_LIVRO)FROM TABELA_LIVRO
 --SUM --MOSTRA A SOMA DOS VALORES EM UMA TABELA
 SELECT SUM(PRECO_LIVRO)FROM TABELA_LIVRO

--COM ALIAS
-- MUDA O NOME DA COLUNA NA EXIBIÇÃO
SELECT MAX(PRECO_LIVRO) AS PRECO_MAXIMO FROM TABELA_LIVRO
SELECT MIN(PRECO_LIVRO) AS PRECO_MAXIMO FROM TABELA_LIVRO
SELECT AVG(PRECO_LIVRO) AS PRECO_MAXIMO FROM TABELA_LIVRO
SELECT SUM(PRECO_LIVRO) AS PRECO_MAXIMO FROM TABELA_LIVRO

--BETWEEN
--MOSTRA VALORES ENTRE DOIS INTERVALOS
SELECT * FROM TABELA_LIVRO
WHERE DATA_PUBLICACAO 
BETWEEN '20040517' AND '20100517'
--EXEPLICAÇÃO
/* SELECIONE TUDO DA TABELA_LIVRO
ONDE DATA_PUBLICACAO
ESTA ENTRE DATA DIA-MES-ANO E DATA DIA-MES-ANO */
--OUTRO EXEMPLO DE USO DE BETWEEN
SELECT NOME_LIVRO AS LIVRO,PRECO_LIVRO AS PREÇO
FROM TABELA_LIVRO
WHERE PRECO_LIVRO BETWEEN 40.00 AND 60.00

--COMAMNDO LIKE E NOT LIKE 
/*
PARA USAR O NOT LIKE É SO POR O NOT NA FRENTE DO LIKE Q ELE FAZ A OPERAÇÃO INVERSA
PALAVRAS QUE COMEÇAM COM A LIKE 'A%'
PALAVRAS QUE TERMINAM COM A LIKE '%A'
PALAVRAS QUE A SEGUNDA LETRA SEJA A LIKE '_A'--SO 1 ANDERLINE
PALAVRAS QUE A TERCEIRA SEJA A LETRA SEJA A LIKE '___A'--3 UNDERLINES
PALAVRAS QUE A NONA LETRA SEJA A LIKE '_________A'--9 UNDERLINES
PALAVRAS QUE A QUARTA LETRA SEJA A LIKE'____A'--4 UNDERLINES E ASSIM POR DIANTE
PALAVRAS QUE A PRIMEIRA LETRA É A E A QUINTA LETRA É B LIKE'A____B%'
PALAVRAS QUE COMEÇAM COM A OU B LIKE '[AB]%'
PALAVRAS QUE TERMINAM COM A OU B LIKE '%[AB]'
PALAVRAS QUE A SEGUNDA LETRA É A OU B LIKE '_[AB]%'
PALAVRAS QUE ESTEJAM ENTRE A E Z LIKE '[AZ]'
PALAVRAS QUE  NÃO COMEÇAM  A NOT LIKE 'A%'
*/
--EXEMPLO
SELECT * FROM TABELA_LIVRO
WHERE NOME_LIVRO LIKE 'A%'

--EXEMPLO NOT LIKE
SELECT * FROM TABELA_LIVRO
WHERE NOME_LIVRO NOT LIKE 'A%'

